<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.Http.Core</name>
    </assembly>
    <members>
        <member name="P:Microsoft.AspNet.Http.Core.IFormFeature.HasFormContentType">
            <summary>
            Indicates if the request has a supported form content-type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Http.Core.IFormFeature.Form">
            <summary>
            The parsed form, if any.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.IFormFeature.ReadForm">
            <summary>
            Parses the request body as a form.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.IFormFeature.ReadFormAsync(System.Threading.CancellationToken)">
            <summary>
            Parses the request body as a form.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNet.Http.Core.ReferenceReadStream">
            <summary>
            A Stream that wraps another stream starting at a certain offset and reading for the given length.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Http.Core.Collections.FormCollection">
            <summary>
            Contains the parsed form values.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary">
            <summary>
            Represents a wrapper for owin.RequestHeaders and owin.ResponseHeaders.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.String[]})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Owin.HeaderDictionary" /> class.
            </summary>
            <param name="store">The underlying data store.</param>
        </member>
        <member name="P:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:Microsoft.Owin.HeaderDictionary" />;.
            </summary>
            <returns>An <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:Microsoft.Owin.HeaderDictionary" />.</returns>
        </member>
        <member name="P:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.Values">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Microsoft.Owin.HeaderDictionary" />;.
            </summary>
            <returns>The number of elements contained in the <see cref="T:Microsoft.Owin.HeaderDictionary" />.</returns>
        </member>
        <member name="P:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.IsReadOnly">
            <summary>
            Gets a value that indicates whether the <see cref="T:Microsoft.Owin.HeaderDictionary" /> is in read-only mode.
            </summary>
            <returns>true if the <see cref="T:Microsoft.Owin.HeaderDictionary" /> is in read-only mode; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.Item(System.String)">
            <summary>
            Get or sets the associated value from the collection as a single string.
            </summary>
            <param name="key">The header name.</param>
            <returns>the associated value from the collection as a single string or null if the key is not present.</returns>
        </member>
        <member name="P:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#Item(System.String)">
            <summary>
            Throws KeyNotFoundException if the key is not present.
            </summary>
            <param name="key">The header name.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.Get(System.String)">
            <summary>
            Get the associated value from the collection as a single string.
            </summary>
            <param name="key">The header name.</param>
            <returns>the associated value from the collection as a single string or null if the key is not present.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.GetValues(System.String)">
            <summary>
            Get the associated values from the collection without modification.
            </summary>
            <param name="key">The header name.</param>
            <returns>the associated value from the collection without modification, or null if the key is not present.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.GetCommaSeparatedValues(System.String)">
            <summary>
            Get the associated values from the collection separated into individual values.
            Quoted values will not be split, and the quotes will be removed.
            </summary>
            <param name="key">The header name.</param>
            <returns>the associated values from the collection separated into individual values, or null if the key is not present.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.Append(System.String,System.String)">
            <summary>
            Add a new value. Appends to the header if already present
            </summary>
            <param name="key">The header name.</param>
            <param name="value">The header value.</param>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.AppendValues(System.String,System.String[])">
            <summary>
            Add new values. Each item remains a separate array entry.
            </summary>
            <param name="key">The header name.</param>
            <param name="values">The header values.</param>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.AppendCommaSeparatedValues(System.String,System.String[])">
            <summary>
            Quotes any values containing comas, and then coma joins all of the values with any existing values.
            </summary>
            <param name="key">The header name.</param>
            <param name="values">The header values.</param>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.Set(System.String,System.String)">
            <summary>
            Sets a specific header value.
            </summary>
            <param name="key">The header name.</param>
            <param name="value">The header value.</param>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.SetValues(System.String,System.String[])">
            <summary>
            Sets the specified header values without modification.
            </summary>
            <param name="key">The header name.</param>
            <param name="values">The header values.</param>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.SetCommaSeparatedValues(System.String,System.String[])">
            <summary>
            Quotes any values containing comas, and then coma joins all of the values.
            </summary>
            <param name="key">The header name.</param>
            <param name="values">The header values.</param>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.Add(System.String,System.String[])">
            <summary>
            Adds the given header and values to the collection.
            </summary>
            <param name="key">The header name.</param>
            <param name="value">The header values.</param>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:Microsoft.Owin.HeaderDictionary" /> contains a specific key.
            </summary>
            <param name="key">The key.</param>
            <returns>true if the <see cref="T:Microsoft.Owin.HeaderDictionary" /> contains a specific key; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.Remove(System.String)">
            <summary>
            Removes the given header from the collection.
            </summary>
            <param name="key">The header name.</param>
            <returns>true if the specified object was removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.TryGetValue(System.String,System.String[]@)">
            <summary>
            Retrieves a value from the dictionary.
            </summary>
            <param name="key">The header name.</param>
            <param name="value">The value.</param>
            <returns>true if the <see cref="T:Microsoft.Owin.HeaderDictionary" /> contains the key; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.String[]})">
            <summary>
            Adds a new list of items to the collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.Clear">
            <summary>
            Clears the entire list of objects.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.String[]})">
            <summary>
            Returns a value indicating whether the specified object occurs within this collection.
            </summary>
            <param name="item">The item.</param>
            <returns>true if the specified object occurs within this collection; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.String[]}[],System.Int32)">
            <summary>
            Copies the <see cref="T:Microsoft.Owin.HeaderDictionary" /> elements to a one-dimensional Array instance at the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the specified objects copied from the <see cref="T:Microsoft.Owin.HeaderDictionary" />.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.String[]})">
            <summary>
            Removes the given item from the the collection.
            </summary>
            <param name="item">The item.</param>
            <returns>true if the specified object was removed from the collection; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Http.Core.Collections.ReadableStringCollection">
            <summary>
            Accessors for query, forms, etc.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.ReadableStringCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String[]})">
            <summary>
            Create a new wrapper
            </summary>
            <param name="store"></param>
        </member>
        <member name="P:Microsoft.AspNet.Http.Core.Collections.ReadableStringCollection.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Http.Core.Collections.ReadableStringCollection.Keys">
            <summary>
            Gets a collection containing the keys.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Http.Core.Collections.ReadableStringCollection.Item(System.String)">
            <summary>
            Get the associated value from the collection.  Multiple values will be merged.
            Returns null if the key is not present.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.ReadableStringCollection.ContainsKey(System.String)">
            <summary>
            Determines whether the collection contains an element with the specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.ReadableStringCollection.Get(System.String)">
            <summary>
            Get the associated value from the collection.  Multiple values will be merged.
            Returns null if the key is not present.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.ReadableStringCollection.GetValues(System.String)">
            <summary>
            Get the associated values from the collection in their original format.
            Returns null if the key is not present.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.ReadableStringCollection.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.ReadableStringCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.AspNet.Http.Core.Collections.RequestCookiesCollection.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Http.Core.Collections.RequestCookiesCollection.Keys">
            <summary>
            Gets a collection containing the keys.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.RequestCookiesCollection.ContainsKey(System.String)">
            <summary>
            Determines whether the collection contains an element with the specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.RequestCookiesCollection.Get(System.String)">
            <summary>
            Get the associated value from the collection.  Multiple values will be merged.
            Returns null if the key is not present.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.RequestCookiesCollection.GetValues(System.String)">
            <summary>
            Get the associated values from the collection in their original format.
            Returns null if the key is not present.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNet.Http.Core.Collections.ResponseCookies">
            <summary>
            A wrapper for the response Set-Cookie header
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.ResponseCookies.#ctor(Microsoft.AspNet.Http.IHeaderDictionary)">
            <summary>
            Create a new wrapper
            </summary>
            <param name="headers"></param>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.ResponseCookies.Append(System.String,System.String)">
            <summary>
            Add a new cookie and value
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.ResponseCookies.Append(System.String,System.String,Microsoft.AspNet.Http.CookieOptions)">
            <summary>
            Add a new cookie
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.ResponseCookies.Delete(System.String)">
            <summary>
            Sets an expired cookie
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Microsoft.AspNet.Http.Core.Collections.ResponseCookies.Delete(System.String,Microsoft.AspNet.Http.CookieOptions)">
            <summary>
            Sets an expired cookie
            </summary>
            <param name="key"></param>
            <param name="options"></param>
        </member>
    </members>
</doc>
